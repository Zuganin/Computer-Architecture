.include "macrolib.asm"
.globl rounding

.text	
# Функция окргуления получанного значения.
rounding:

	la t0, array_for_rounding					# Загружаем массив констант в регистр t0
loop:						
	lw t1 (t0)							# Загружаем число по адресу t0 в регистр t1.
	addi t0, t0, 4							# Обновляем адрес следующего числа и
	fcvt.d.w ft10, t1						# Загружаем число из массива в double
	fcvt.d.w ft9, t1 						 	
	fmul.d ft10, ft10, ft11						# Домножаем введенную точность на элемент массива
	fcvt.w.d t1, ft10						# Переноим из double в int
							
	li t2, 1
	beq t1, t2, next						# Проверяем равна ли точность элементу из массива
	j loop	
next: 
	
	fmul.d ft2, ft2, ft9						# Если размерность совпадает с точностью, то домножаем результат алгоритма на размерность.
	fcvt.w.d t2, ft2						# Округляем значение 
	fcvt.d.w ft2, t2						# Переноим из int в double
	fdiv.d ft2, ft2, ft9						# Делим на нужную размерност и получаем округленное значение.

	ret 
	